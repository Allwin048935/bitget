import ccxt

BITGET_API_KEY = 'bg_6153231782d4239653d4fec1f5e98a96'
BITGET_API_SECRET = 'a9081277d3e96cdca97b1e3d93f5d3760ae5dc76cb9a7960e429f838c01cd102'
BITGET_API_PASSWORD = '9025014840'

bitget = ccxt.bitget({
    "apiKey": BITGET_API_KEY,
    "secret": BITGET_API_SECRET,
    "password": BITGET_API_PASSWORD,
    "options": {"defaultType": "swap"},  # Ensure you're using the correct type
})

def place_market_order(symbol, side, quantity):
    """Places a market order on Bitget considering the correct position mode."""
    try:
        bitget_symbol = symbol.replace("/", "").replace(":USDT", "")  # Convert AR/USDT:USDT to ARUSDT
        
        # Ensure position mode is correctly set
        position_mode = "single_hold"  # For one-way mode (unilateral)
        
        order_data = {
            "symbol": bitget_symbol,
            "side": side,
            "size": quantity,
            "type": "market",
            "marginCoin": "USDT",
            "holdSide": "short" if side == "sell" else "long",  # Set correct position type
        }

        print(f"Placing {side.upper()} order for {symbol}: {order_data}")
        response = bitget.private_post_mix_v1_order_place_order(order_data)
        
        print(f"Order Response: {response}")
        return response
    except Exception as e:
        print(f"Error placing Market {side.upper()} Order for {symbol}: {e}")
        return None

# Example usage:
symbol = "AR/USDT:USDT"  # Adjust symbol formatting if needed
side = "sell"  # "buy" for long, "sell" for short
quantity = 10  # Adjust based on your available balance and margin

# Place a new market order
place_market_order(symbol, side, quantity)
